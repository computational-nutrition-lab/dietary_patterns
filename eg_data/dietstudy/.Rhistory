"#fffac8",
"#800000",
"#aaffc3",
"#808000",
"#ffd8b1",
"#000075",
"#a9a9a9",
"#000000",
"#ffffff",
"#7460d2",
"#ff0000",
"#ec943c",
"#faee69",
"#0055fd",
"#ff007e",
"#4d4949",
"#a6f1ff",
"#2dff00",
"#ff6300",
"#965353",
"#4600f8")
names(UserNameColors) <- c("MCTs03", "MCTs07", "MCTs22", "MCTs10", "MCTs13", "MCTs14",
"MCTs15", "MCTs16", "MCTs18", "MCTs20", "MCTs21", "MCTs09", "MCTs23",
"MCTs24", "MCTs25", "MCTs26", "MCTs32", "MCTs33", "MCTs35",
"MCTs01", "MCTs04", "MCTs05", "MCTs06", "MCTs08", "MCTs11",
"MCTs12", "MCTs19", "MCTs27", "MCTs28", "MCTs29", "MCTs31", "MCTs34",
"MCTs36", "MCTs37")
UserNameColors
is(UserNameColors)
library(dplyr)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
colnames(bbb)
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
write.table(as.data.frame(sortedbbb), "clipboard", sep="\t")
library(agricolae)
data(sweetpotato)
dim(sweetpotato)
sweetpotato
#stargraph
# Variation range: max and min
plot(out)
model<-aov(yield~virus, data=sweetpotato)
model<-aov(yield~virus, data=sweetpotato)
model
out <- LSD.test(model, "virus", p.adj="bonferroni")
out
#stargraph
# Variation range: max and min
plot(out)
#endgraph
# Old version LSD.test()
df<-df.residual(model)
df
MSerror<-deviance(model)/df
out <- with(sweetpotato,LSD.test(yield, virus,df, MSerror))
out
#stargraph
# Variation interquartil range: Q75 and Q25
plot(out,ã€€variation="IQR")
#endgraph
out<-LSD.test(model,"virus",p.adj="hommel",console=TRUE)
plot(out,variation="SD") # variation standard deviation
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t") # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t") # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header = T) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
mydata
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header = T) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
mydata
# Reorder factor if necessary
# mydata$V1 = factor(mydata$V1, levels = c("Current", "Previous", "Considered"))
mydata$V1 = factor(mydata$V1, levels = c("Current", "Previous", "Considered", "Never"))
mydata$V1 = factor(mydata$V1, levels = c("Current", "Previous", "Considered"))
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
# Reorder factor if necessary
mydata$User_status = factor(mydata$V1, levels = c("Current", "Previous", "Considered"))
# Reorder factor if necessary
mydata$User_status = factor(mydata$User_status, levels = c("Current", "Previous", "Considered"))
twoway = table(mydata$`User_status`, mydata$Quality_vary)
twoway = table(mydata$`User_status`, mydata$Quality_vary)
twoway
table(mydata$Quality_vary)
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
table(mydata$Vary_by_supplier)
table(mydata$Variation_difficult)
table(mydata$Universal_spec)
colnames(mydata)
table(mydata$Availability_changed)
table(mydata$Universal_spec)
table(mydata$Gluten)
table(mydata$Lectin)
table(mydata$Is_there_supplier)
table(mydata$Is_cost_critical)
table(mydata$Is_supply_enough)
# Reorder factor if necessary
mydata$User_status         = factor(mydata$User_status, levels = c("Current", "Previous", "Considered"))
mydata$Quality_vary        = factor(mydata$Quality_vary, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Vary_by_supplier    = factor(mydata$Vary_by_supplier, levels = c("Yes", "Sometimes", "No", "Do not know", "We only purchase from one supplier"))
mydata$Variation_difficult = factor(mydata$Variation_difficult, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Universal_spec      = factor(mydata$Universal_spec, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Gluten              = factor(mydata$Gluten, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Lectin              = factor(mydata$Lectin, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Is_there_supplier = factor(mydata$Is_there_supplier, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Is_cost_critical  = factor(mydata$Is_cost_critical, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Is_supply_enough  = factor(mydata$Is_supply_enough, levels = c("Yes", "Sometimes", "No", "Do not know" ))
mydata$Availability_changed = factor(mydata$Availability_changed, levels = c("More available","Same as before", "Less available",  "Do not know" ))
table(mydata$Quality_vary)
twoway = table(mydata$`User_status`, mydata$Quality_vary)
twoway
ttwoway = t(twoway)
ttwoway
ttwoway$Curr_pct <- ttwoway$Current/8*100
is(ttwoway)
ttwoway = as.data.frame(t(twoway))
ttwoway$Curr_pct <- ttwoway$Current/8*100
ttwoway
twoway
ttwoway = t(twoway)
ttwoway
tttwoway = as.data.frame(ttwoway)
tttwoway
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway
mydata$Quality_vary        = factor(mydata$Quality_vary, levels = c("Yes", "Sometimes", "No", "Do not know", "No answer" ))
mydata$Vary_by_supplier    = factor(mydata$Vary_by_supplier, levels = c("Yes", "Sometimes", "No", "Do not know", "We only purchase from one supplier", "No answer"))
mydata$Variation_difficult = factor(mydata$Variation_difficult, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Universal_spec      = factor(mydata$Universal_spec, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Gluten              = factor(mydata$Gluten, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Lectin              = factor(mydata$Lectin, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Is_there_supplier = factor(mydata$Is_there_supplier, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Is_cost_critical  = factor(mydata$Is_cost_critical, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Is_supply_enough  = factor(mydata$Is_supply_enough, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Availability_changed = factor(mydata$Availability_changed, levels = c("More available","Same as before", "Less available",  "Do not know" , "No answer"
))
table(mydata$Quality_vary)
colnames(mydata)
twoway = table(mydata$`User_status`, mydata$Quality_vary)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
colSums(tttwoway)
tttwoway
# Loop through several questions: summarize by user type. ========================================================
mydata = read.table(file="clipboard", sep="\t", header = T) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
# Loop through several questions: summarize by user type. ========================================================
mydata = read.table(file="clipboard", sep="\t", header = T) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
head(mydata)
nrow(mydata)
mydata$User_status         = factor(mydata$User_status, levels = c("Current", "Previous", "Considered"))
mydata$Quality_vary        = factor(mydata$Quality_vary, levels = c("Yes", "Sometimes", "No", "Do not know", "No answer" ))
mydata$Vary_by_supplier    = factor(mydata$Vary_by_supplier, levels = c("Yes", "Sometimes", "No", "Do not know", "We only purchase from one supplier", "No answer"))
mydata$Variation_difficult = factor(mydata$Variation_difficult, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Universal_spec      = factor(mydata$Universal_spec, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Gluten              = factor(mydata$Gluten, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Lectin              = factor(mydata$Lectin, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Is_there_supplier = factor(mydata$Is_there_supplier, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Is_cost_critical  = factor(mydata$Is_cost_critical, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Is_supply_enough  = factor(mydata$Is_supply_enough, levels = c("Yes", "Sometimes", "No", "Do not know" , "No answer"))
mydata$Availability_changed = factor(mydata$Availability_changed, levels = c("More available","Same as before", "Less available",  "Do not know" , "No answer"))
table(mydata$Quality_vary)
colnames(mydata)
twoway = table(mydata$`User_status`, mydata$Quality_vary)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
tttwowaysum[7,1]
tttwowaysum[6,1] <-
# Count satisfactory/challenges categories. ===========================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
tttwowaysum[6,1
]
tttwowaysum[6,1]
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
tttwowaysum
freqtable <- tttwowaysum[, c(1,4,2,6,3,7)] # change column orders.
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
freqtable
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata[, 2])
twoway
twoway = table(mydata$`User_status`, mydata[, 3])
twoway
colnames(mydata)
twoway = table(mydata$`User_status`, mydata$Vary_by_supplier)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata$Variation_difficult)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata$Universal_spec)
twoway
# [1] "User_status"          "Quality_vary"         "Vary_by_supplier"     "Variation_difficult"
# [5] "Universal_spec"       "Gluten"               "Lectin"               "Is_there_supplier"
# [9] "Is_cost_critical"     "Is_supply_enough"     "Availability_changed"
table(Universal_spec)
# [1] "User_status"          "Quality_vary"         "Vary_by_supplier"     "Variation_difficult"
# [5] "Universal_spec"       "Gluten"               "Lectin"               "Is_there_supplier"
# [9] "Is_cost_critical"     "Is_supply_enough"     "Availability_changed"
table(mydata$Universal_spec)
twoway = table(mydata$`User_status`, mydata$Universal_spec)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
# [1] "User_status"          "Quality_vary"         "Vary_by_supplier"     "Variation_difficult"
# [5] "Universal_spec"       "Gluten"               "Lectin"               "Is_there_supplier"
# [9] "Is_cost_critical"     "Is_supply_enough"     "Availability_changed"
table(mydata$Gluten)
twoway = table(mydata$`User_status`, mydata$Gluten)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
# [1] "User_status"          "Quality_vary"         "Vary_by_supplier"     "Variation_difficult"
# [5] "Universal_spec"       "Gluten"               "Lectin"               "Is_there_supplier"
# [9] "Is_cost_critical"     "Is_supply_enough"     "Availability_changed"
table(mydata$Lectin)
twoway = table(mydata$`User_status`, mydata$Lectin)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata$Is_there_supplier)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata$Is_cost_critical)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata$Is_supply_enough)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
twoway = table(mydata$`User_status`, mydata$Availability_changed)
twoway
ttwoway = t(twoway)
tttwoway = as.data.frame.matrix(ttwoway)
tttwoway
tttwoway$Curr_pct <- tttwoway$Current/8*100
tttwoway$Prev_pct <- tttwoway$Previous/4*100
tttwoway$Considered_pct <- tttwoway$Considered/9*100
tttwoway
tttwowaysum = rbind(tttwoway, colSums(tttwoway))
tttwowaysum
rownames(tttwowaysum)[length(rownames(tttwowaysum))] <- "Total"  # Change the last rowname
freqtable <- tttwowaysum[, c(1,4,2,5,3,6)] # change column orders.
write.table(freqtable,"clipboard", sep = "\t")
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t")
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t")
require(ggplot2)
require("dplyr")
setwd("~/GitHub/dietary_patterns")
# Name your main directory for future use.
main.wd <- file.path(getwd())
# Import source code to run the analyses to follow.
source("lib/load_and_check.R")
# Load example data files ===============================================================
# Specify the directory where the data is.
SpecifyDataDirectory(directory.name = "eg_data/dietstudy/")
# Load the totals data.
totals <- read.table("Totals_to_use.txt",  sep = "\t", header = T)
SubsetNutrients <- function(data = totals, start_col = "PROT", end_col = "B12_ADD"){
# Column Variables of "totals" dataframe.
colvars <- names(totals)
# Get the first ID
start_col <- match(start_col, colvars)
# Get the second ID
end_col <- match(end_col, colvars)
# Subset range
nutrients <<- totals[, start_col:end_col]
# Print what was loaded.
cat("nutrients dataset contains the following", length(colnames(nutrients)), "columns.", "\n")
print(colnames(nutrients))
}
# The columns "PROT" and "B12_ADD" and all columns in between will be selected.
#   Edit the start_col and/or end_col if different from the default.
SubsetNutrients(data = totals, start_col = "PROT", end_col = "B12_ADD")
# Perform PCA with all the nutrients, scaled.
scaled_pca <- prcomp(nutrients, scale = T)
summary(scaled_pca)
# Calculate the variance explained for each PC.
var_explained_df <- data.frame(PC = paste0("PC",1:length(colnames(nutrients))),
var_explained = (scaled_pca$sdev)^2/sum((scaled_pca$sdev)^2))
head(var_explained_df, 10)
ggplot(var_explained_df, aes(x=PC, y=var)) +
geom_line() +
geom_point()
ggplot(var_explained_df, aes(x=PC, y=var_explained)) +
geom_line() +
geom_point()
ggplot(var_explained_df, aes(x=PC, y=var_explained)) +
geom_line()
rep(1:length(colnames(nutrients))
)
# Calculate the variance explained for each PC.
var_explained_df <- data.frame(PC = rep(1:length(colnames(nutrients))),
var_explained = (scaled_pca$sdev)^2/sum((scaled_pca$sdev)^2))
head(var_explained_df, 10)
ggplot(var_explained_df, aes(x=PC, y=var_explained)) +
geom_line()
ggplot(var_explained_df, aes(x=PC, y=var_explained)) +
geom_line() +
geom_point()
first10PCs <- var_explained_df[ ,10]
first10PCs <- var_explained_df[1:10, ]
first10PCs
ggplot(var_explained_df, aes(x=PC, y=var_explained*100)) +
geom_line() +
geom_point()
ggplot(first10PCs, aes(x=PC, y=var_explained*100)) +
geom_line() +
geom_point()
ggplot(first10PCs, aes(x=PC, y=var_explained*100)) +
geom_line() +
geom_point() +
theme_bw(base = 12)
ggplot(first10PCs, aes(x=PC, y=var_explained*100)) +
geom_line() +
geom_point() +
theme_bw(base_size = 12)
ggplot(first10PCs, aes(x=PC, y=var_explained*100)) +
geom_line() +
geom_point() +
theme_bw(base_size = 12) +
labs(x = "Number of PCs",
y = "Variance explained by PCs (%)")
ggplot(first10PCs, aes(x=PC, y=var_explained*100)) +
geom_line() +
geom_point() +
theme_bw(base_size = 15) +
labs(x = "Number of PCs",
y = "Variance explained by PCs (%)") +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(aspect.ratio = 0.9)
