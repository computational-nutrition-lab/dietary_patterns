head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
# mycol
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
library(dplyr)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol)
nrow(mycol)
head(mycol, 20)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
V1table
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
V1table
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
V1table
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
V1table
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
colnames(bbb)
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
colnames(bbb)
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
write.table(as.data.frame(sortedbbb), "clipboard", sep="\t")
install.packages("wordcloud")
library(wordcloud)
library(RColorBrewer)
install.packages("tm")
library(tm)
#Create a vector containing only the text
text <- data$text
install.packages("wordcloud2")
library(wordcloud2)
#Create a vector containing only the text
text <- data$text
View(bbb)
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 400, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 400, random.order=FALSE, rot.per=0.8,
colors=brewer.pal(8, "Dark2"))
?wordcloud
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 400, random.order=T, rot.per=1,
colors=brewer.pal(8, "Dark2"))
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 400, random.order=T, rot.per=0,
colors=brewer.pal(8, "Dark2"))
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"))
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 40, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"))
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 40, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
head(sortedbbb)
head(sortedbbb,15)
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 40, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F, ordered.colors=T)
wordcloud(words=sortedbbb$mycol, freq=sortedbbb$Freq, min.freq=5,
max.words = 40, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
head(sortedbbb,15)
View(sortedbbb)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=5,
max.words = 40, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=5,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=10,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=20,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=20,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=T)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=15,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=30,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=5,
max.words = 400, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud(words=bbb$mycol, freq=bbb$Freq, min.freq=5,
max.words = 100, random.order=F, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp=F)
wordcloud2(data=bbb, size=1.6, color='random-dark')
head(sortedbbb,15)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
colnames(bbb)
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
write.table(as.data.frame(sortedbbb), "clipboard", sep="\t", row.names=F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
head(sortedbbb)
write.table(as.data.frame(sortedbbb), "clipboard", sep="\t", row.names=F)
female = read.table(file="clipboard", sep="\t", header=T)
head(female, 20)
nrow(female)
male = read.table(file="clipboard", sep="\t", header=T)
head(male, 20)
nrow(male)
names(female)
names(female)[2] <- "female_freq"
nrow(female)
head(female, 20)
names(male)[2] <- "male_freq"
head(male, 20)
fandm <- merge(x=female, y=male, all = T, by="mycol")
head(fandm)
ttwoway <- fandm
Total = colSums(t(ttwoway)) # Column totals
fandm_zeros[ is.na(fandm_zeros) ] <- 0
fandm_zeros <- fandm # make a copy
fandm_zeros[ is.na(fandm_zeros) ] <- 0
head(fandm_zeros)
ttwoway <- fandm_zeros
Total = colSums(t(ttwoway)) # Column totals
write.table(fandm_zeros, "clipboard", sep='\t')
write.table(fandm_zeros, "clipboard", sep='\t', row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
sortedbbb = bbb[ order(bbb$Freq, decreasing = T), ]
sortedbbb
table(sortedbbb$Freq)
sum(sortedbbb$Freq)
write.table(as.data.frame(sortedbbb), "clipboard", sep="\t", row.names=F)
colnames(bbb)
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
nrow(mycol)
head(mycol, 20)
unique(mycol)
uniquenames = unique(mycol)
write.table(uniquenames, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
uniquenames = unique(mycol)
sort(uniquenames)
order(uniquenames)
uniquenames
write.table(uniquenames, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# NUMERIC ----
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
head(mycol, 20)
nrow(mycol)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t", header =T) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
mydata = read.table(file="clipboard", sep="\t", header =f) # sep="," for 1 column, sep="\t" for multiple columns
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
V1table
sortedV1table = V1table[ order(V1table$Freq, decreasing = T), ]  # sort by col totals
sortedV1table
write.table(sortedV1table, "clipboard", sep="\t", row.names = F)
length(unique(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
V1table = as.data.frame(table(mydata$V1))
V1table
length(unique(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
sortedV1table = V1table[ order(V1table$Freq, decreasing = T), ]  # sort by col totals
write.table(sortedV1table, "clipboard", sep="\t", row.names = F)
# generate a two-way parents' frequency table
female = read.table(file="clipboard", sep="\t", header=T)
head(female, 20)
nrow(female)
# generate a two-way parents' frequency table
female = read.table(file="clipboard", sep="\t", header=F)
head(female, 20)
nrow(female)
names(female)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
sortedV1table = V1table[ order(V1table$Freq, decreasing = T), ]  # sort by col totals
write.table(sortedV1table, "clipboard", sep="\t", row.names = F)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
sortedV1table = V1table[ order(V1table$Freq, decreasing = T), ]  # sort by col totals
write.table(sortedV1table, "clipboard", sep="\t", row.names = F)
# generate a two-way parents' frequency table
female = read.table(file="clipboard", sep="\t", header=F)
head(female, 20)
nrow(female)
# generate a two-way parents' frequency table
female = read.table(file="clipboard", sep="\t", header=F)
head(female, 20)
nrow(female)
names(female)[2] <- "female_freq"
male = read.table(file="clipboard", sep="\t", header=T)
head(male, 20)
nrow(male)
nrow(male)
names(male)[2] <- "male_freq"
head(female, 20)
# generate a two-way parents' frequency table
female = read.table(file="clipboard", sep="\t", header=T)
head(female, 20)
nrow(female)
names(female)[2] <- "female_freq"
head(female, 20)
head(male, 20)
fandm <- merge(x=female, y=male, all = T, by="Val1")
fandm <- merge(x=female, y=male, all = T, by="Var1")
head(fandm)
# replace NAs with zero.
fandm_zeros[ is.na(fandm_zeros) ] <- 0
fandm_zeros <- fandm # make a copy
# replace NAs with zero.
fandm_zeros[ is.na(fandm_zeros) ] <- 0
head(fandm_zeros)
write.table(fandm_zeros, "clipboard", sep='\t', row.names = F)
ttwoway <- fandm_zeros
Total = colSums(t(ttwoway)) # Column totals
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
sortedV1table = V1table[ order(V1table$Freq, decreasing = T), ]  # sort by col totals
write.table(V1table, "clipboard", sep="\t", row.names = F)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
library(dplyr)
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
mydata %>% group_by(V2) %>% summarize(totalcount=count(V4))
mydata %>% group_by(V2) %>% summarise(totalcount=sum(V4))
bypulse <-  mydata %>% group_by(V2) %>% summarise(totalcount=sum(V4))
write.table(bypulse, "clipboard", sep='\t')
setwd("~/GitHub/dietary_patterns")
# Name your main directory for future use.
main_wd <- file.path(getwd())
# Import source code to run the analyses to follow.
source("lib/specify_dir_and_check_col.R")
source("lib/load_clean_ASA24.R")
source("lib/format.file.R")
# You can come back to the main directory by:
setwd(main_wd)
SpecifyDataDirectory(directory.name = "eg_data/VVKAJ/")
# Load your raw items data.
items_raw <- read.csv("VVKAJ_2022-07-06_13547_Items.csv", sep = ",", header=T)
items_raw
# Save it as a .txt file for further processing.
write.table(items_raw, "VVKAJ_2022-07-06_13547_Items.txt", sep="\t", row.names=F)
# Special characters such as "'", ",", "%" may interfere correct data loading; thus,
# we replace them with an underscore "_".  Takes only .txt files as input.
# Specify column(s) to be processed in the "columns" argument.
format.file(filename = "VVKAJ_2022-07-06_13547_Items.txt",
columns  = "Food_Description",
outfn    = "VVKAJ_2022-07-06_13547_Items_f.txt")  # _f stands for "formatted".
# Load the formatted Items file.
items_f <- read.table("VVKAJ_2022-07-06_13547_Items_f.txt", sep="\t", header=T)
# All special characters in items_f should have been replaced with an underscore.
head(items_f)
# ========================================================================================
# <Optional> Use individuals_to_remove.txt to filter out users marked as Remove = yes.
# ========================================================================================
# Load your metadata that has information about which UserName(s) to remove.
ind_to_rm <- read.table("individuals_to_remove.txt", sep="\t", header=T)
View(RemoveRows)
View(RemoveRows)
View(RemoveRows)
# Load ind_metadata.txt.
ind_metadata <- read.table("ind_metadata.txt", sep="\t", header=T)
# Look at what the metadata has.
head(ind_metadata)
