indexno_prot,
indexno_tfat)]
# Change the column names for the following process
colnames(totalssub)[1:2] <- c("UserName", "RecallNo")
print(totalssub)
# # Calc grams of macronutrients.
# CARBmean <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = mean)
# colnames(CARBmean) <- c("UserName", "CARB_mean")
# CARBsd <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = sd)
# colnames(CARBsd) <- c("UserName", "CARB_sd")
# CARBlength <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = length)
# colnames(CARBlength) <- c("UserName", "CARB_n")
# C_length_mean <-   merge(x=CARBlength, y=CARBmean, all.x=T)
# C_length_mean_sd <- merge(x=C_length_mean, y=CARBsd, all.x=T)
# C_length_mean_sd$macronutrient <- "CARB"
#
# PROTmean <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = mean)
# colnames(PROTmean) <- c("UserName", "PROT_mean")
# PROTsd <-   aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = sd)
# colnames(PROTsd) <- c("UserName", "PROT_sd")
# PROTlength <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = length)
# colnames(PROTlength) <- c("UserName", "PROT_n")
# P_length_mean <-   merge(x=PROTlength, y=PROTmean, all.x=T)
# P_length_mean_sd <- merge(x=P_length_mean, y=PROTsd, all.x=T)
# P_length_mean_sd$macronutrient <- "PROT"
#
# TFATmean <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = mean)
# colnames(TFATmean) <- c("UserName", "TFAT_mean")
# TFATsd <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = sd)
# colnames(TFATsd) <- c("UserName", "TFAT_sd")
# TFATlength <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = length)
# colnames(TFATlength) <- c("UserName", "TFAT_n")
# T_length_mean <-    merge(x=TFATlength, y=TFATmean, all.x=T)
# T_length_mean_sd <- merge(x=T_length_mean, y=TFATsd, all.x=T)
# T_length_mean_sd$macronutrient <- "TFAT"
# T_length_mean_sd
#
# # Change column names for rbind
# colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
# colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
# colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
#
# rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
# CPT_g_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
print(outfn)
# # Save CPT_g_fn. (fn stands for "function")
# write.table(x=CPT_g_fn, file=outfn, sep="\t", row.names=F, quote=F)
}
# Calculate the mean and SD of CARB, PROT, and TFAT.
CPTgramsPerUser(inputfn= totals, user.name = "UserName", recall.no = "Recall.No",
outfn='VVKAJ_2021-11-09_7963_Tot_m_QCed')
colnames(totals)
CPTgramsPerUser <- function(inputfn, user.name='UserName',
recall.no='RecallNo', outfn){
# Get index numbers for username, recallno, "CARB","PROT","TFAT", "KCAL"
indexno_username <- which(names(inputfn)== user.name)
indexno_recallno <- which(names(inputfn)== recall.no)
indexno_carb <-     which(names(inputfn)== "CARB")
indexno_prot <-     which(names(inputfn)== "PROT")
indexno_tfat <-     which(names(inputfn)== "TFAT")
print(indexno_username)
print(indexno_recallno)
print(indexno_carb)
print(indexno_prot)
print(indexno_tfat)
# Take only the relevant columns from inputfn.
totalssub <- inputfn[, c(indexno_username,
indexno_recallno,
indexno_carb,
indexno_prot,
indexno_tfat)]
# Change the column names for the following process
# colnames(totalssub)[1:2] <- c("UserName", "RecallNo")
print(totalssub)
# # Calc grams of macronutrients.
# CARBmean <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = mean)
# colnames(CARBmean) <- c("UserName", "CARB_mean")
# CARBsd <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = sd)
# colnames(CARBsd) <- c("UserName", "CARB_sd")
# CARBlength <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = length)
# colnames(CARBlength) <- c("UserName", "CARB_n")
# C_length_mean <-   merge(x=CARBlength, y=CARBmean, all.x=T)
# C_length_mean_sd <- merge(x=C_length_mean, y=CARBsd, all.x=T)
# C_length_mean_sd$macronutrient <- "CARB"
#
# PROTmean <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = mean)
# colnames(PROTmean) <- c("UserName", "PROT_mean")
# PROTsd <-   aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = sd)
# colnames(PROTsd) <- c("UserName", "PROT_sd")
# PROTlength <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = length)
# colnames(PROTlength) <- c("UserName", "PROT_n")
# P_length_mean <-   merge(x=PROTlength, y=PROTmean, all.x=T)
# P_length_mean_sd <- merge(x=P_length_mean, y=PROTsd, all.x=T)
# P_length_mean_sd$macronutrient <- "PROT"
#
# TFATmean <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = mean)
# colnames(TFATmean) <- c("UserName", "TFAT_mean")
# TFATsd <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = sd)
# colnames(TFATsd) <- c("UserName", "TFAT_sd")
# TFATlength <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = length)
# colnames(TFATlength) <- c("UserName", "TFAT_n")
# T_length_mean <-    merge(x=TFATlength, y=TFATmean, all.x=T)
# T_length_mean_sd <- merge(x=T_length_mean, y=TFATsd, all.x=T)
# T_length_mean_sd$macronutrient <- "TFAT"
# T_length_mean_sd
#
# # Change column names for rbind
# colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
# colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
# colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
#
# rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
# CPT_g_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
print(outfn)
# # Save CPT_g_fn. (fn stands for "function")
# write.table(x=CPT_g_fn, file=outfn, sep="\t", row.names=F, quote=F)
}
# Calculate the mean and SD of CARB, PROT, and TFAT.
CPTgramsPerUser(inputfn= totals, user.name = "UserName", recall.no = "Recall.No",
outfn='VVKAJ_2021-11-09_7963_Tot_m_QCed')
# Calculate the mean and SD of CARB, PROT, and TFAT.
CPTgramsPerUser(inputfn= totals, user.name = "UserName", recall.no = "RecallNo",
outfn='VVKAJ_2021-11-09_7963_Tot_m_QCed')
CPTgramsPerUser <- function(inputfn, user.name='UserName',
recall.no='RecallNo', outfn){
# Get index numbers for username, recallno, "CARB","PROT","TFAT", "KCAL"
indexno_username <- which(names(inputfn)== user.name)
indexno_recallno <- which(names(inputfn)== recall.no)
indexno_carb <-     which(names(inputfn)== "CARB")
indexno_prot <-     which(names(inputfn)== "PROT")
indexno_tfat <-     which(names(inputfn)== "TFAT")
# Take only the relevant columns from inputfn.
totalssub <- inputfn[, c(indexno_username,
indexno_recallno,
indexno_carb,
indexno_prot,
indexno_tfat)]
# Change the column names for the following process
colnames(totalssub)[1:2] <- c("UserName", "RecallNo")
# Calc grams of macronutrients.
CARBmean <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = mean)
colnames(CARBmean) <- c("UserName", "CARB_mean")
CARBsd <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = sd)
colnames(CARBsd) <- c("UserName", "CARB_sd")
CARBlength <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = length)
colnames(CARBlength) <- c("UserName", "CARB_n")
C_length_mean <-   merge(x=CARBlength, y=CARBmean, all.x=T)
C_length_mean_sd <- merge(x=C_length_mean, y=CARBsd, all.x=T)
C_length_mean_sd$macronutrient <- "CARB"
PROTmean <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = mean)
colnames(PROTmean) <- c("UserName", "PROT_mean")
PROTsd <-   aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = sd)
colnames(PROTsd) <- c("UserName", "PROT_sd")
PROTlength <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = length)
colnames(PROTlength) <- c("UserName", "PROT_n")
P_length_mean <-   merge(x=PROTlength, y=PROTmean, all.x=T)
P_length_mean_sd <- merge(x=P_length_mean, y=PROTsd, all.x=T)
P_length_mean_sd$macronutrient <- "PROT"
TFATmean <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = mean)
colnames(TFATmean) <- c("UserName", "TFAT_mean")
TFATsd <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = sd)
colnames(TFATsd) <- c("UserName", "TFAT_sd")
TFATlength <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = length)
colnames(TFATlength) <- c("UserName", "TFAT_n")
T_length_mean <-    merge(x=TFATlength, y=TFATmean, all.x=T)
T_length_mean_sd <- merge(x=T_length_mean, y=TFATsd, all.x=T)
T_length_mean_sd$macronutrient <- "TFAT"
T_length_mean_sd
# Change column names for rbind
colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
CPT_g_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
print(CPT_g_fn)
# Save CPT_g_fn. (fn stands for "function")
write.table(x=CPT_g_fn, file=outfn, sep="\t", row.names=F, quote=F)
}
# Calculate the mean and SD of CARB, PROT, and TFAT.
CPTgramsPerUser(inputfn= totals, user.name = "UserName", recall.no = "RecallNo",
outfn='VVKAJ_2021-11-09_7963_Tot_m_QCed.txt')
CPTgramsPerUser <- function(inputfn, user.name='UserName',
recall.no='RecallNo', outfn){
# Get index numbers for username, recallno, "CARB","PROT","TFAT", "KCAL"
indexno_username <- which(names(inputfn)== user.name)
indexno_recallno <- which(names(inputfn)== recall.no)
indexno_carb <-     which(names(inputfn)== "CARB")
indexno_prot <-     which(names(inputfn)== "PROT")
indexno_tfat <-     which(names(inputfn)== "TFAT")
# Take only the relevant columns from inputfn.
totalssub <- inputfn[, c(indexno_username,
indexno_recallno,
indexno_carb,
indexno_prot,
indexno_tfat)]
# Change the column names for the following process
colnames(totalssub)[1:2] <- c("UserName", "RecallNo")
# Calc grams of macronutrients.
CARBmean <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = mean)
colnames(CARBmean) <- c("UserName", "CARB_mean")
CARBsd <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = sd)
colnames(CARBsd) <- c("UserName", "CARB_sd")
CARBlength <- aggregate(totalssub$CARB, by = list(totalssub$UserName), FUN = length)
colnames(CARBlength) <- c("UserName", "CARB_n")
C_length_mean <-   merge(x=CARBlength, y=CARBmean, all.x=T)
C_length_mean_sd <- merge(x=C_length_mean, y=CARBsd, all.x=T)
C_length_mean_sd$macronutrient <- "CARB"
PROTmean <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = mean)
colnames(PROTmean) <- c("UserName", "PROT_mean")
PROTsd <-   aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = sd)
colnames(PROTsd) <- c("UserName", "PROT_sd")
PROTlength <- aggregate(totalssub$PROT, by = list(totalssub$UserName), FUN = length)
colnames(PROTlength) <- c("UserName", "PROT_n")
P_length_mean <-   merge(x=PROTlength, y=PROTmean, all.x=T)
P_length_mean_sd <- merge(x=P_length_mean, y=PROTsd, all.x=T)
P_length_mean_sd$macronutrient <- "PROT"
TFATmean <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = mean)
colnames(TFATmean) <- c("UserName", "TFAT_mean")
TFATsd <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = sd)
colnames(TFATsd) <- c("UserName", "TFAT_sd")
TFATlength <- aggregate(totalssub$TFAT, by = list(totalssub$UserName), FUN = length)
colnames(TFATlength) <- c("UserName", "TFAT_n")
T_length_mean <-    merge(x=TFATlength, y=TFATmean, all.x=T)
T_length_mean_sd <- merge(x=T_length_mean, y=TFATsd, all.x=T)
T_length_mean_sd$macronutrient <- "TFAT"
T_length_mean_sd
# Change column names for rbind
colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
CPT_g_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
print(CPT_g_fn)
# Save CPT_g_fn. (fn stands for "function")
write.table(x=CPT_g_fn, file=outfn, sep="\t", row.names=F, quote=F)
}
# Calculate the mean and SD of CARB, PROT, and TFAT.
CPTgramsPerUser(inputfn= totals, user.name = "UserName", recall.no = "RecallNo",
outfn='VVKAJ_2021-11-09_7963_Tot_m_QCed_CPT_g.txt')
# Run function
CPTpctKcalPerUser(inputfn=totals, user.name='UserName',
recall.no='RecallNo', outfn="outfn_name")
# Function to calculate the mean % of energy intake (kcal) and SD of CARB, PROT, and TFAT.
CPTpctKcalPerUser <- function(inputfn, user.name='UserName',
recall.no='RecallNo', outfn){
# Get index numbers for username, recallno, "CARB","PROT","TFAT", "KCAL"
indexno_username <- which(names(inputfn)== user.name)
indexno_recallno <- which(names(inputfn)== recall.no)
indexno_carb <-     which(names(inputfn)== "CARB")
indexno_prot <-     which(names(inputfn)== "PROT")
indexno_tfat <-     which(names(inputfn)== "TFAT")
indexno_kcal <-     which(names(inputfn)== "KCAL")
# Take only the relevant columns from inputfn.
totalssub2 <- inputfn[, c(indexno_username,
indexno_recallno,
indexno_carb,
indexno_prot,
indexno_tfat,
indexno_kcal)]
# Change the column names for the following process
colnames(totalssub2)[1:2] <- c("UserName", "RecallNo")
# % KCAL
# calculate calories
totalssub2$CARB_kcal <- totalssub2$CARB * 4
totalssub2$PROT_kcal <- totalssub2$PROT * 4
totalssub2$TFAT_kcal <- totalssub2$TFAT * 9
# calculate kcal of each macronutrient per engergy (%)
totalssub2$CARB_kcal_pct <- totalssub2$CARB_kcal / totalssub2$KCAL * 100
totalssub2$PROT_kcal_pct <- totalssub2$PROT_kcal / totalssub2$KCAL * 100
totalssub2$TFAT_kcal_pct <- totalssub2$TFAT_kcal / totalssub2$KCAL * 100
CARB_kcal_pctmean <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(CARB_kcal_pctmean) <- c("UserName", "CARB_kcal_pct_mean")
CARB_kcal_pctsd <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(CARB_kcal_pctsd) <- c("UserName", "CARB_kcal_pct_sd")
CARB_kcal_pctlength <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(CARB_kcal_pctlength) <- c("UserName", "CARB_kcal_pct_n")
C_length_mean <-   merge(x=CARB_kcal_pctlength, y=CARB_kcal_pctmean, all.x=T)
C_length_mean_sd <- merge(x=C_length_mean, y=CARB_kcal_pctsd, all.x=T)
C_length_mean_sd$macronutrient <- "CARB_kcal_pct"
PROT_kcal_pctmean <- aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(PROT_kcal_pctmean) <- c("UserName", "PROT_kcal_pct_mean")
PROT_kcal_pctsd <-   aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(PROT_kcal_pctsd) <- c("UserName", "PROT_kcal_pct_sd")
PROT_kcal_pctlength <- aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(PROT_kcal_pctlength) <- c("UserName", "PROT_kcal_pct_n")
P_length_mean <-   merge(x=PROT_kcal_pctlength, y=PROT_kcal_pctmean, all.x=T)
P_length_mean_sd <- merge(x=P_length_mean, y=PROT_kcal_pctsd, all.x=T)
P_length_mean_sd$macronutrient <- "PROT_kcal_pct"
TFAT_kcal_pctmean <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(TFAT_kcal_pctmean) <- c("UserName", "TFAT_kcal_pct_mean")
TFAT_kcal_pctsd <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(TFAT_kcal_pctsd) <- c("UserName", "TFAT_kcal_pct_sd")
TFAT_kcal_pctlength <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(TFAT_kcal_pctlength) <- c("UserName", "TFAT_kcal_pct_n")
T_length_mean <-    merge(x=TFAT_kcal_pctlength, y=TFAT_kcal_pctmean, all.x=T)
T_length_mean_sd <- merge(x=T_length_mean, y=TFAT_kcal_pctsd, all.x=T)
T_length_mean_sd$macronutrient <- "TFAT_kcal_pct"
T_length_mean_sd
print(totalssub2)
# Change column names for rbind
colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
CPT_kcal_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
CPT_kcal_fn
# Save CPT_kcal.
print(outfn)
}
# Run function
CPTpctKcalPerUser(inputfn=totals, user.name='UserName',
recall.no='RecallNo', outfn="outfn_name")
CPT_kcal
# Function to calculate the mean % of energy intake (kcal) and SD of CARB, PROT, and TFAT.
CPTpctKcalPerUser <- function(inputfn, user.name='UserName',
recall.no='RecallNo', outfn){
# Get index numbers for username, recallno, "CARB","PROT","TFAT", "KCAL"
indexno_username <- which(names(inputfn)== user.name)
indexno_recallno <- which(names(inputfn)== recall.no)
indexno_carb <-     which(names(inputfn)== "CARB")
indexno_prot <-     which(names(inputfn)== "PROT")
indexno_tfat <-     which(names(inputfn)== "TFAT")
indexno_kcal <-     which(names(inputfn)== "KCAL")
# Take only the relevant columns from inputfn.
totalssub2 <- inputfn[, c(indexno_username,
indexno_recallno,
indexno_carb,
indexno_prot,
indexno_tfat,
indexno_kcal)]
# Change the column names for the following process
colnames(totalssub2)[1:2] <- c("UserName", "RecallNo")
# % KCAL
# calculate calories
totalssub2$CARB_kcal <- totalssub2$CARB * 4
totalssub2$PROT_kcal <- totalssub2$PROT * 4
totalssub2$TFAT_kcal <- totalssub2$TFAT * 9
# calculate kcal of each macronutrient per engergy (%)
totalssub2$CARB_kcal_pct <- totalssub2$CARB_kcal / totalssub2$KCAL * 100
totalssub2$PROT_kcal_pct <- totalssub2$PROT_kcal / totalssub2$KCAL * 100
totalssub2$TFAT_kcal_pct <- totalssub2$TFAT_kcal / totalssub2$KCAL * 100
CARB_kcal_pctmean <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(CARB_kcal_pctmean) <- c("UserName", "CARB_kcal_pct_mean")
CARB_kcal_pctsd <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(CARB_kcal_pctsd) <- c("UserName", "CARB_kcal_pct_sd")
CARB_kcal_pctlength <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(CARB_kcal_pctlength) <- c("UserName", "CARB_kcal_pct_n")
C_length_mean <-   merge(x=CARB_kcal_pctlength, y=CARB_kcal_pctmean, all.x=T)
C_length_mean_sd <- merge(x=C_length_mean, y=CARB_kcal_pctsd, all.x=T)
C_length_mean_sd$macronutrient <- "CARB_kcal_pct"
PROT_kcal_pctmean <- aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(PROT_kcal_pctmean) <- c("UserName", "PROT_kcal_pct_mean")
PROT_kcal_pctsd <-   aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(PROT_kcal_pctsd) <- c("UserName", "PROT_kcal_pct_sd")
PROT_kcal_pctlength <- aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(PROT_kcal_pctlength) <- c("UserName", "PROT_kcal_pct_n")
P_length_mean <-   merge(x=PROT_kcal_pctlength, y=PROT_kcal_pctmean, all.x=T)
P_length_mean_sd <- merge(x=P_length_mean, y=PROT_kcal_pctsd, all.x=T)
P_length_mean_sd$macronutrient <- "PROT_kcal_pct"
TFAT_kcal_pctmean <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(TFAT_kcal_pctmean) <- c("UserName", "TFAT_kcal_pct_mean")
TFAT_kcal_pctsd <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(TFAT_kcal_pctsd) <- c("UserName", "TFAT_kcal_pct_sd")
TFAT_kcal_pctlength <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(TFAT_kcal_pctlength) <- c("UserName", "TFAT_kcal_pct_n")
T_length_mean <-    merge(x=TFAT_kcal_pctlength, y=TFAT_kcal_pctmean, all.x=T)
T_length_mean_sd <- merge(x=T_length_mean, y=TFAT_kcal_pctsd, all.x=T)
T_length_mean_sd$macronutrient <- "TFAT_kcal_pct"
T_length_mean_sd
print(totalssub2)
# Change column names for rbind
colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
CPT_kcal_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
print(CPT_kcal_fn)
# Save CPT_kcal.
print(outfn)
}
# Run function
CPTpctKcalPerUser(inputfn=totals, user.name='UserName',
recall.no='RecallNo', outfn="outfn_name")
CPT_kcal
# Function to calculate the mean % of energy intake (kcal) and SD of CARB, PROT, and TFAT.
CPTpctKcalPerUser <- function(inputfn, user.name='UserName',
recall.no='RecallNo', outfn){
# Get index numbers for username, recallno, "CARB","PROT","TFAT", "KCAL"
indexno_username <- which(names(inputfn)== user.name)
indexno_recallno <- which(names(inputfn)== recall.no)
indexno_carb <-     which(names(inputfn)== "CARB")
indexno_prot <-     which(names(inputfn)== "PROT")
indexno_tfat <-     which(names(inputfn)== "TFAT")
indexno_kcal <-     which(names(inputfn)== "KCAL")
# Take only the relevant columns from inputfn.
totalssub2 <- inputfn[, c(indexno_username,
indexno_recallno,
indexno_carb,
indexno_prot,
indexno_tfat,
indexno_kcal)]
# Change the column names for the following process
colnames(totalssub2)[1:2] <- c("UserName", "RecallNo")
# % KCAL
# calculate calories
totalssub2$CARB_kcal <- totalssub2$CARB * 4
totalssub2$PROT_kcal <- totalssub2$PROT * 4
totalssub2$TFAT_kcal <- totalssub2$TFAT * 9
# calculate kcal of each macronutrient per engergy (%)
totalssub2$CARB_kcal_pct <- totalssub2$CARB_kcal / totalssub2$KCAL * 100
totalssub2$PROT_kcal_pct <- totalssub2$PROT_kcal / totalssub2$KCAL * 100
totalssub2$TFAT_kcal_pct <- totalssub2$TFAT_kcal / totalssub2$KCAL * 100
CARB_kcal_pctmean <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(CARB_kcal_pctmean) <- c("UserName", "CARB_kcal_pct_mean")
CARB_kcal_pctsd <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(CARB_kcal_pctsd) <- c("UserName", "CARB_kcal_pct_sd")
CARB_kcal_pctlength <- aggregate(totalssub2$CARB_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(CARB_kcal_pctlength) <- c("UserName", "CARB_kcal_pct_n")
C_length_mean <-   merge(x=CARB_kcal_pctlength, y=CARB_kcal_pctmean, all.x=T)
C_length_mean_sd <- merge(x=C_length_mean, y=CARB_kcal_pctsd, all.x=T)
C_length_mean_sd$macronutrient <- "CARB_kcal_pct"
PROT_kcal_pctmean <- aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(PROT_kcal_pctmean) <- c("UserName", "PROT_kcal_pct_mean")
PROT_kcal_pctsd <-   aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(PROT_kcal_pctsd) <- c("UserName", "PROT_kcal_pct_sd")
PROT_kcal_pctlength <- aggregate(totalssub2$PROT_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(PROT_kcal_pctlength) <- c("UserName", "PROT_kcal_pct_n")
P_length_mean <-   merge(x=PROT_kcal_pctlength, y=PROT_kcal_pctmean, all.x=T)
P_length_mean_sd <- merge(x=P_length_mean, y=PROT_kcal_pctsd, all.x=T)
P_length_mean_sd$macronutrient <- "PROT_kcal_pct"
TFAT_kcal_pctmean <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = mean)
colnames(TFAT_kcal_pctmean) <- c("UserName", "TFAT_kcal_pct_mean")
TFAT_kcal_pctsd <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = sd)
colnames(TFAT_kcal_pctsd) <- c("UserName", "TFAT_kcal_pct_sd")
TFAT_kcal_pctlength <- aggregate(totalssub2$TFAT_kcal_pct, by = list(totalssub2$UserName), FUN = length)
colnames(TFAT_kcal_pctlength) <- c("UserName", "TFAT_kcal_pct_n")
T_length_mean <-    merge(x=TFAT_kcal_pctlength, y=TFAT_kcal_pctmean, all.x=T)
T_length_mean_sd <- merge(x=T_length_mean, y=TFAT_kcal_pctsd, all.x=T)
T_length_mean_sd$macronutrient <- "TFAT_kcal_pct"
# Change column names for rbind
colnames(C_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(P_length_mean_sd)[2:4] <- c("n", "mean", "sd")
colnames(T_length_mean_sd)[2:4] <- c("n", "mean", "sd")
rbound <- rbind(C_length_mean_sd, P_length_mean_sd, T_length_mean_sd)
CPT_kcal_fn <- rbound[, c(1,5,2,3,4)] # bring macronutrient to 2nd
# Save CPT_kcal_fn. (fn stands for "function")
write.table(x=CPT_kcal_fn, file=outfn, sep="\t", row.names=F, quote=F)
}
# Load the %kcal
CPT_kcal_read <- read.table("VVKAJ_2021-11-09_7963_Tot_m_QCed_CPT_kcal.txt", sep="\t", header=T)
# Calculate the mean % of energy intake (kcal) and SD of CARB, PROT, and TFAT.
CPTpctKcalPerUser(inputfn=totals, user.name='UserName', recall.no='RecallNo',
outfn="VVKAJ_2021-11-09_7963_Tot_m_QCed_CPT_kcal.txt")
# Load the %kcal
CPT_kcal_read <- read.table("VVKAJ_2021-11-09_7963_Tot_m_QCed_CPT_kcal.txt", sep="\t", header=T)
CPT_kcal_read
CPT_kcal
# Plot without SD first...
library(ggplot2)
nonnormal <- ggplot(CPT_kcal,
aes(x = UserName, y = mean, fill = macronutrient)) +
geom_bar(position = "stack", stat = "identity", colour = "black", width = 0.7) +
theme_bw(base_size = 10) +
# scale_fill_manual(values = my15colors, # ) +
# labels=c( "Carbohydrates", "Protein", "Total fat")) +
labs(x = element_blank(), y = "Percentages of total kcal intake", fill = "Macronutrients") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x = element_text(margin=margin(t = 5, r = 0, b = 0, l = 0))) +
theme(axis.title.y = element_text(margin=margin(t = 0, r = 5, b = 0, l = 0))) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1))
# theme(aspect.ratio = 0.4)
nonnormal
nonnormal
CPT_kcal
# Plot "dodge"-type of barchart
# Different bars for carb, prot, and tfat. NOT STACKED.
ggplot(CPT_kcal, aes(x = factor(UserName), y = mean, fill = macronutrient, colour = macronutrient)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin= mean-sd, ymax= mean+sd), position = position_dodge(0.9), width = 0.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x = element_text(margin=margin(t = 5, r = 0, b = 0, l = 0))) +
theme(axis.title.y = element_text(margin=margin(t = 0, r = 5, b = 0, l = 0))) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1))
# Plot "dodge"-type of barchart
# Different bars for carb, prot, and tfat. NOT STACKED.
ggplot(CPT_kcal, aes(x = factor(UserName), y = mean, fill = macronutrient, colour = macronutrient)) +
geom_bar(stat = "identity", position = "dodge", color="black")  +
geom_errorbar(aes(ymin= mean-sd, ymax= mean+sd), position = position_dodge(0.9), width = 0.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x = element_text(margin=margin(t = 5, r = 0, b = 0, l = 0))) +
theme(axis.title.y = element_text(margin=margin(t = 0, r = 5, b = 0, l = 0))) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1))
# Plot "dodge"-type of barchart
# Different bars for carb, prot, and tfat. NOT STACKED.
ggplot(CPT_kcal, aes(x = factor(UserName), y = mean, fill = macronutrient, colour = macronutrient)) +
geom_bar(stat = "identity", position = "dodge", color="black")  +
geom_errorbar(aes(ymin= mean-sd, ymax= mean+sd), position = position_dodge(0.9), width = 0.25,
color="black") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x = element_text(margin=margin(t = 5, r = 0, b = 0, l = 0))) +
theme(axis.title.y = element_text(margin=margin(t = 0, r = 5, b = 0, l = 0))) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1))
# Plot "dodge"-type of barchart
# Different bars for carb, prot, and tfat. NOT STACKED.
ggplot(CPT_kcal, aes(x = factor(UserName), y = mean, fill = macronutrient, colour = macronutrient)) +
geom_bar(stat = "identity", position = "dodge", color="black")  +
geom_errorbar(aes(ymin= mean, ymax= mean+sd), position = position_dodge(0.9), width = 0.25,
color="black") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x = element_text(margin=margin(t = 5, r = 0, b = 0, l = 0))) +
theme(axis.title.y = element_text(margin=margin(t = 0, r = 5, b = 0, l = 0))) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1))
