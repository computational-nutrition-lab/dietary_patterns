# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# Freq table with 2 variables.===========================================================
mydata = read.table(file="clipboard", sep="\t") # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
as.data.frame(table(mydata$V1))
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t")
write.table(V1table, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Useful! Get counts of data from Excel =========================================================
# Get data (One column) from Clipboard ================================================
mycol = read.table(file="clipboard", sep=",") # sep="," for 1 column, sep="\t" for multiple columns
#write.table(mycol, "clipboard", sep="\t")
head(mycol)
nrow(mycol)
# mycol
bbb = as.data.frame(table(mycol))
# mycol
bbb = as.data.frame(table(mycol))
bbb
write.table(bbb, "clipboard", sep="\t", row.names = F)
# Load necessary packages.
library(SASxport)
library(foreign)
# Set where the NHANES data and food code table are.
# it is not in the eg_data folder because it's too large to save in GitHub folder.
# setwd("E:/MSU OneDrive 20210829/UMinn/20_NHANES/2015-16")
setwd("~/GitHub/dietary_patterns")
# Load necessary functions.
source("lib/load_clean_NHANES.R")
# Format the food table and save it as a .txt file.
PrepareFoodCodeTable(raw.food.code.table = "eg_data/NHANES/FoodCodes_DRXFCD_I.XPT",
out.fn =              "eg_data/NHANES/FoodCodes_DRXFCD_I_f.txt")
# Load the formatted food code table.
foodcodetable_f <- read.table("eg_data/NHANES/FoodCodes_DRXFCD_I_f.txt", sep="\t", header=T)
# Import items data Day 1, add food item descriptions, and save it as a txt file.
# LIKELY IT WILL BE A HUGE FILE.
ImportNHANESFoodItems(data.name="E:/MSU OneDrive 20210829/UMinn/20_NHANES/2015-16/Data/Interview_IndFoods_Day1_DR1IFF_I.XPT",
food.code.column = "DR1IFDCD",
food.code.table = foodcodetable_f,
out.fn = "eg_data/NHANES/Interview_IndFoods_Day1_DR1IFF_I_d.txt") # 'd' stands for food descriptions
# Load the saved food items file.
Food_D1 <- read.table("eg_data/NHANES/Interview_IndFoods_Day1_DR1IFF_I_d.txt", sep="\t", header=T)
head(Food_D1,2)
# Import items data Day 2, add food item descriptions, and save it as a txt file.
ImportNHANESFoodItems(data.name="E:/MSU OneDrive 20210829/UMinn/20_NHANES/2015-16/Data/Interview_IndFoods_Day2_DR2IFF_I.XPT",
food.code.column = "DR2IFDCD",
food.code.table = foodcodetable_f,
out.fn = "eg_data/NHANES/Interview_IndFoods_Day2_DR2IFF_I_d.txt")
# Add food item description and save it as a txt file.
Food_D2 <- read.table("eg_data/NHANES/Interview_IndFoods_Day2_DR2IFF_I_d.txt", sep="\t", header=T)
# Remove children.
# Load the demographics file, then filter by age > 18.
demo <- read.xport("eg_data/NHANES/DEMO_I.XPT")
# Remove children.
# Load the demographics file, then filter by age > 18.
demog <- read.xport("eg_data/NHANES/DEMO_I.XPT")
adults <- demog[demog$RIDAGEYR >= 18, ]
rm(demo)
# Retain those with complete data (STZ==1)
# DR1DRSTZ == 1: reliable and all relevant variables associated with the 24-hour dietary recall contain a value.
# Code descriptions in Analytic notes: https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/DR1IFF_J.htm#Analytic_Notes
food1 <- subset(Food_D1, DR1DRSTZ == 1)
food2 <- subset(Food_D2, DR2DRSTZ == 1)
# Create a vector of SEQN of those who reported more than 1 food item per day.
freqtable1 <- as.data.frame(table(food1$SEQN))
freqtable1_m <- freqtable1[freqtable1$Freq > 1, ]
colnames(freqtable1_m)[1] <- "SEQN"
colnames(freqtable1_m)
keepnames_adults_mult1 <- keepnames_adults[keepnames_adults %in% freqtable1_m$SEQN]
adults
# Load the saved food items file.
Food_D1 <- read.table("eg_data/NHANES/Interview_IndFoods_Day1_DR1IFF_I_d.txt", sep="\t", header=T)
# Add food item description and save it as a txt file.
Food_D2 <- read.table("eg_data/NHANES/Interview_IndFoods_Day2_DR2IFF_I_d.txt", sep="\t", header=T)
# Remove children.
# Load the demographics file, then filter by age > 18.
demog <- read.xport("eg_data/NHANES/DEMO_I.XPT")
adults <- demog[demog$RIDAGEYR >= 18, ]
# Retain those with complete data (STZ==1)
# DR1DRSTZ == 1: reliable and all relevant variables associated with the 24-hour dietary recall contain a value.
# Code descriptions in Analytic notes: https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/DR1IFF_J.htm#Analytic_Notes
food1 <- subset(Food_D1, DR1DRSTZ == 1)
food2 <- subset(Food_D2, DR2DRSTZ == 1)
food1names <- unique(food1$SEQN)
food2names <- unique(food2$SEQN)
keepnames <- food1names[food1names %in% food2names]
keepnames <- food1names[food1names %in% food2names]
keepnames_adults <- keepnames[keepnames %in% adults$SEQN]
# Create a vector of SEQN of those who reported more than 1 food item per day.
freqtable1 <- as.data.frame(table(food1$SEQN))
freqtable1_m <- freqtable1[freqtable1$Freq > 1, ]
head(freqtable1_m)
head(freqtable1_m[order(freqtable1_m$Freq), ])
colnames(freqtable1_m)[1] <- "SEQN"
keepnames_adults_mult1 <- keepnames_adults[keepnames_adults %in% freqtable1_m$SEQN]
# Take only those in keepnames_adults_mult1.
food2 <- food1[food1$SEQN %in% keepnames_adults_mult1, ]
head(food2)
food2 <- subset(Food_D2, DR2DRSTZ == 1)
food2names <- unique(food2$SEQN)
# Do the same for food2
freqtable2 <- as.data.frame(table(food2$SEQN))
freqtable2_m <- freqtable2[freqtable2$Freq > 1, ]
head(freqtable2_m[order(freqtable2_m$Freq), ])
freqtable2_m <- freqtable2[freqtable2$Freq > 1, ]
colnames(freqtable2_m)[1] <- "SEQN"
keepnames_adults_mult2 <- keepnames_adults[keepnames_adults %in% freqtable2_m$SEQN]
food2b <- food2[food2$SEQN %in% keepnames_adults_mult2, ]
head(food2b)
# Create a vector of SEQN of those that have both day 1 and day 2 data.
food1bnames <- unique(food1b$SEQN)
# Take only those in keepnames_adults_mult1.
food1b <- food1[food1$SEQN %in% keepnames_adults_mult1, ]
# Create a vector of SEQN of those that have both day 1 and day 2 data.
food1bnames <- unique(food1b$SEQN)
food2bnames <- unique(food2b$SEQN)
keepnames12 <- food1bnames[food1bnames %in% food2bnames]
# Combine day 1 and day 2 data.
# Day 1
# Import the list of variables present in Day 1.
day1variables <- read.table('eg_data/NHANES/NHANES_Food_VarNames_Day1.txt', header=F)
# Combine day 1 and day 2 data.
# Day 1
# Import the list of variables present in Day 1.
day1variables <- read.table('eg_data/NHANES/NHANES_Food_VarNames_Day1.txt', header=F)
# Which variables to pick up from the food data
var_to_use1 <- names(food1b) %in% day1variables$V1
# pick up only the specified variables
food1c <- food1b[, var_to_use1]
# Remove "DR1T", "DR1" from the column names
colnames(food1c) <- gsub(colnames(food1c), pattern = "DR1I", replacement = "")
colnames(food1c) <- gsub(colnames(food1c), pattern = "DR1", replacement = "")
# Check
head(food1c, 1)
# Do the same for Day 2
day2variables <- read.table('eg_data/NHANES/NHANES_Food_VarNames_Day2.txt', header=F)
var_to_use2 <- names(food2b) %in% day2variables$V1
food2c <- food2b[, var_to_use2]
colnames(food2c) <- gsub(colnames(food2c), pattern = "DR2I", replacement = "")
colnames(food2c) <- gsub(colnames(food2c), pattern = "DR2", replacement = "")
head(food2c, 1)
# Do the columns of food1 and food2 match?
identical(colnames(food1c), colnames(food2c))
# Make a day variable before combining
food1c$Day = 1
food2c$Day = 2
head(food2c, 1)
# Combine food1 and food2
food12c <- rbind(food1c, food2c)
# Pick up only those in keepnames12.
food12d <- food12c[food12c$SEQN %in% keepnames12, ]
sum(table(unique(food12d$SEQN))[,1] <4)
unique(food12d$SEQN)
length(unique(food12d$SEQN))
aaa = as.data.frame(table(food12d$SEQN, food12d$Day))
head(aaa[order(aaa$Freq), ], 10)
head(aaa[order(aaa$Freq), ], 10)
tail(aaa[order(aaa$Freq), ], 10)
subset(food12d, SEQN==86563)[, 'Day']
head(aaa, 10)
table(aaa$Var2)
sum(table(food12d$SEQN, food12$Day)[,1] <2)
sum(table(food12d$SEQN, food12d$Day)[,1] <2)
sum(table(food12d$SEQN, food12d$Day)[,2] <2)
sum(table(food12d$SEQN, food12d$Day)[,2] <2) # how many has <2 food entries? Should be zero.
aaa = as.data.frame(table(food12d$SEQN, food12d$Day))
head(aaa, 10)
table(aaa$Var2)
tail(aaa[order(aaa$Freq), ], 10)
table(food12$Day)
diet_type_map <- nhanes_totals_1 %>% select(SEQN, DRQSDIET, DRQSDT1, DRQSDT2, DRQSDT3, DRQSDT4, DRQSDT5, DRQSDT6, DRQSDT7, DRQSDT8, DRQSDT9, DRQSDT10, DRQSDT11, DRQSDT12, DRQSDT91)
head(food12d,1)
head(food12d,2)
colnames(food12d)
# Take only the Day 1 data
food12d_d1 <- subset(food12d, Day==1)
total1 <- aggregate(food12d_d1[, 2:66], by=list(food12d_d1$SEQN), FUN=sum)
head(total1)
total1$Day <- 1
head(total1)
colnames(totals1)[1] <- "SEQN"
colnames(total1)[1] <- "SEQN"
head(total1)
n_items <- as.data.frame(table(food12d_d1$SEQN))
head(n_items)
dim(n_items)
dim(total1)
identical(n_items$Var1, total1$SEQN)
bbb <- data.frame(items=n_items$Var1, total=total1$SEQN)
head(bbb)
identical(bbb$items, bbb$total)
tail(bbb)
bbb <- data.frame(items=n_items$Var1, total=total1$SEQN, diff=n_items$Var1-total1$SEQN)
str(bbb)
bbb <- data.frame(as.integer(items=n_items$Var1), total=total1$SEQN, diff=n_items$Var1-total1$SEQN)
bbb <- data.frame(items=as.integer(n_items$Var1), total=total1$SEQN, diff=n_items$Var1-total1$SEQN)
bbb <- data.frame(items=as.integer(n_items$Var1), total=total1$SEQN)
tail(bbb)
head(n_items)
dim(n_items)
head(total1)
dim(total1)
head(bbb)
bbb <- data.frame(items=n_items$Var1, total=total1$SEQN)
head(bbb)
tail(bbb)
bbb$items_i <- as.integer(bbb$items)
head(bbb)
bbb$total_f <- as.factor(bbb$total)
head(bbb)
tail(bbb)
str(bbb)
identical(bbb$items, bbb$total_f)
head(n_items)
head(totals1)
head(total1)
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
head(n_items1)
colnames(n_items1) <- c("SEQN", "NoOfItems")
head(n_items1)
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
head(total1b)
select(total1b, NoOfItems<1)
subset(total1b, NoOfItems<1)
subset(total1b, NoOfItems<2)
total1b[is.na(total1b$NoOfItems), ]
