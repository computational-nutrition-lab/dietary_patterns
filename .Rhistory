nrow(mydata)
V1table = as.data.frame(table(mydata$V1))
write.table(V1table, "clipboard", sep="\t", row.names = F)
sortedV1table = V1table[ order(V1table$Freq, decreasing = T), ]  # sort by col totals
write.table(V1table, "clipboard", sep="\t", row.names = F)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
mydata = read.table(file="clipboard", sep="\t", header =F) # sep="," for 1 column, sep="\t" for multiple columns
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
tail(mydata)
nrow(mydata)
library(dplyr)
# write.table(mycol, "clipboard", sep="\t")
# mydata
head(mydata)
mydata %>% group_by(V2) %>% summarize(totalcount=count(V4))
mydata %>% group_by(V2) %>% summarise(totalcount=sum(V4))
bypulse <-  mydata %>% group_by(V2) %>% summarise(totalcount=sum(V4))
write.table(bypulse, "clipboard", sep='\t')
function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# # Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# food12d_d2 <- subset(food12d, Day==2)
#
# # Sum food items and nutrients by SEQN from start through end columns.
# start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
# end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
#
# total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
#                     by= list(food12d_d2$SEQN),
#                     FUN= sum)
#
# total2$Day <- 2
# colnames(total2)[1] <- "SEQN"
#
# # Create a vector of number of food items reported by each participant.
# n_items2 <- as.data.frame(table(food12d_d2$SEQN))
# colnames(n_items2) <- c("SEQN", "NoOfItems")
# # Add it to total1
# total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
}
# Result
Food_D1_FC_cc_f <- read.table("eg_data/NHANES/Food_D1_FC_cc_f.txt", sep="\t", header=T)
setwd("~/GitHub/dietary_patterns")
# Result
Food_D1_FC_cc_f <- read.table("eg_data/NHANES/Food_D1_FC_cc_f.txt", sep="\t", header=T)
Food_D2_FC_cc_f <- read.table("eg_data/NHANES/Food_D2_FC_cc_f.txt", sep="\t", header=T)
# Load food12d.
food12d <- read.table("eg_data/NHANES/NHANES1516_items_d12_FC_QC.txt", sep="\t", header=T)
head(food12d)
function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# # Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# food12d_d2 <- subset(food12d, Day==2)
#
# # Sum food items and nutrients by SEQN from start through end columns.
# start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
# end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
#
# total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
#                     by= list(food12d_d2$SEQN),
#                     FUN= sum)
#
# total2$Day <- 2
# colnames(total2)[1] <- "SEQN"
#
# # Create a vector of number of food items reported by each participant.
# n_items2 <- as.data.frame(table(food12d_d2$SEQN))
# colnames(n_items2) <- c("SEQN", "NoOfItems")
# # Add it to total1
# total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
}
function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
)
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# # Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# food12d_d2 <- subset(food12d, Day==2)
#
# # Sum food items and nutrients by SEQN from start through end columns.
# start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
# end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
#
# total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
#                     by= list(food12d_d2$SEQN),
#                     FUN= sum)
#
# total2$Day <- 2
# colnames(total2)[1] <- "SEQN"
#
# # Create a vector of number of food items reported by each participant.
# n_items2 <- as.data.frame(table(food12d_d2$SEQN))
# colnames(n_items2) <- c("SEQN", "NoOfItems")
# # Add it to total1
# total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
}
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <<- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <<-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# # Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# food12d_d2 <- subset(food12d, Day==2)
#
# # Sum food items and nutrients by SEQN from start through end columns.
# start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
# end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
#
# total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
#                     by= list(food12d_d2$SEQN),
#                     FUN= sum)
#
# total2$Day <- 2
# colnames(total2)[1] <- "SEQN"
#
# # Create a vector of number of food items reported by each participant.
# n_items2 <- as.data.frame(table(food12d_d2$SEQN))
# colnames(n_items2) <- c("SEQN", "NoOfItems")
# # Add it to total1
# total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
}
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d2 <- subset(food12d, Day==2)
# Sum food items and nutrients by SEQN from start through end columns.
start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
by= list(food12d_d2$SEQN),
FUN= sum)
total2$Day <- 2
colnames(total2)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items2 <- as.data.frame(table(food12d_d2$SEQN))
colnames(n_items2) <- c("SEQN", "NoOfItems")
# Add it to total1
total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
# Merge totals day 1 and day 2
# Check if all the columnnames match.
identicalYN <- identical(colnames(total1b), colnames(total2b))
print(identicalYN)
# # Merge
# total12c <- rbind(total1b, total2b)
#
# # Save the calculated totals of day 1 and 2 as a txt file.
# write.table(total12c, "eg_data/NHANES/NHANES1516_total_d12_FC.txt", sep="\t", row.names=F, quote=F)
}
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d2 <- subset(food12d, Day==2)
# Sum food items and nutrients by SEQN from start through end columns.
start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
by= list(food12d_d2$SEQN),
FUN= sum)
total2$Day <- 2
colnames(total2)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items2 <- as.data.frame(table(food12d_d2$SEQN))
colnames(n_items2) <- c("SEQN", "NoOfItems")
# Add it to total1
total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
# Check if all the columnnames match.
identicalYN <- identical(colnames(total1b), colnames(total2b))
print(identicalYN)
if(identicalYN == "TRUE"){
# Merge totals day 1 and day 2
total12c <- rbind(total1b, total2b)
# Save the calculated totals of day 1 and 2 as a txt file.
# write.table(total12c, outfn, sep="\t", row.names=F, quote=F)
}else(identicalYN == "FALSE"){
print("Cannot merge Day1 total and Day2 total because they do not have identical columns.")
}
}
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d2 <- subset(food12d, Day==2)
# Sum food items and nutrients by SEQN from start through end columns.
start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
by= list(food12d_d2$SEQN),
FUN= sum)
total2$Day <- 2
colnames(total2)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items2 <- as.data.frame(table(food12d_d2$SEQN))
colnames(n_items2) <- c("SEQN", "NoOfItems")
# Add it to total1
total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
# Check if all the columnnames match.
identicalYN <- identical(colnames(total1b), colnames(total2b))
print(identicalYN)
if(identicalYN == "TRUE"){
# Merge totals day 1 and day 2
total12c <- rbind(total1b, total2b)
# Save the calculated totals of day 1 and 2 as a txt file.
# write.table(total12c, outfn, sep="\t", row.names=F, quote=F)
}else{
print("Cannot merge Day1 total and Day2 total because they do not have identical columns.")
}
}
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
TotalNHANES(food12d= food12ddddd,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
colnames(food12d)
colnames(food12d)[1] <- "SEQNN"
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
print(outfn)
# Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d2 <- subset(food12d, Day==2)
# Sum food items and nutrients by SEQN from start through end columns.
start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
by= list(food12d_d2$SEQN),
FUN= sum)
total2$Day <- 2
colnames(total2)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items2 <- as.data.frame(table(food12d_d2$SEQN))
colnames(n_items2) <- c("SEQN", "NoOfItems")
# Add it to total1
total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
# Check if all the columnnames match.
identicalYN <- identical(colnames(total1b), colnames(total2b))
print(identicalYN)
if(identicalYN == "TRUE"){
# Merge totals day 1 and day 2
total12c <<- rbind(total1b, total2b)
# Save the calculated totals of day 1 and 2 as a txt file.
# write.table(total12c, outfn, sep="\t", row.names=F, quote=F)
}else{
print("Cannot merge Day1 total and Day2 total because they do not have identical columns.")
}
}
colnames(food12d)
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
colnames(food12d)[2] <- "GRMSSSS"
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
colnames(food12d)[2] <- "GRMS"
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "outfilename" )
head(total12c)
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
TotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn ){
# Calculate total for day 1. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d1 <- subset(food12d, Day==1)
# Sum nutrients and food categories.
start_col_num <- match(first.val, names(food12d_d1))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d1)) # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
total1 <- aggregate(food12d_d1[, start_col_num:end_col_num],
by=list(food12d_d1$SEQN),
FUN=sum)
# Add a Day variable to total1.
total1$Day <- 1
# Rename the first column.
colnames(total1)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items1 <- as.data.frame(table(food12d_d1$SEQN))
colnames(n_items1) <- c("SEQN", "NoOfItems")
# Add it to total1
total1b <- merge(x=total1, y=n_items1, by="SEQN", all.x=T)
# Calculate total for day 2. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
food12d_d2 <- subset(food12d, Day==2)
# Sum food items and nutrients by SEQN from start through end columns.
start_col_num <- match(first.val, names(food12d_d2))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val, names(food12d_d2))   # The number of column that matches the last variable specified.
total2 <- aggregate(food12d_d2[, start_col_num:end_col_num],
by= list(food12d_d2$SEQN),
FUN= sum)
total2$Day <- 2
colnames(total2)[1] <- "SEQN"
# Create a vector of number of food items reported by each participant.
n_items2 <- as.data.frame(table(food12d_d2$SEQN))
colnames(n_items2) <- c("SEQN", "NoOfItems")
# Add it to total1
total2b <- merge(x=total2, y=n_items2, by="SEQN", all.x=T)
# Check if all the columnnames match.
identicalYN <- identical(colnames(total1b), colnames(total2b))
print(identicalYN)
if(identicalYN == "TRUE"){
# Merge totals day 1 and day 2
total12c <- rbind(total1b, total2b)
# Save the calculated totals of day 1 and 2 as a txt file.
write.table(total12c, outfn, sep="\t", row.names=F, quote=F)
}else{
print("Cannot merge Day1 total and Day2 total because they do not have identical columns.")
}
}
colnames(food12d)[1]
colnames(food12d)[1] <- "SEQN"
TotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "A_DRINKS",
outfn = "eg_data/NHANES/NHANES1516_total_d12_FC_byfn.txt" )
# Load the resultant total.
total12c <- read.table("eg_data/NHANES/NHANES1516_total_d12_FC.txt", sep="\t", header=T)
head(total12c)
# Load the resultant total.
total12d <- read.table("eg_data/NHANES/NHANES1516_total_d12_FC.txt", sep="\t", header=T)
# total12d has the sum of each variable (columns) for each day and participant.
head(total12d)
AverageTotalNHANES <- function(food12d= food12d,
first.val= "GRMS", last.val= "NoOfItems",
outfn){
start_col_num <- match(first.val, names(total12d))  # The number of column that matches the first variable specified.
end_col_num <-   match(last.val,  names(total12d))  # The number of column that matches the last variable specified.
# Sum food items by SEQN from start through end columns.
meantotal12a <- aggregate(total12d[, start_col_num:end_col_num],
by=list(total12d$SEQN),
FUN=mean)
# Remove the day, which is now all 1.5 (the average of 1 and 2.)
meantotal12 <- meantotal12a[, !names(meantotal12a) %in% "Day"]
# Change "Group.1" to "SEQN".
colnames(meantotal12)[1] <- "SEQN"
# Save meantotals as a txt file.
write.table(meantotal12, outfn, sep="\t", row.names=F, quote=F)
}
AverageTotalNHANES(food12d= food12d,
first.val= "GRMS", last.val= "NoOfItems",
outfn= "eg_data/NHANES/NHANES1516_total_d12_FC_mean_fn.txt")
