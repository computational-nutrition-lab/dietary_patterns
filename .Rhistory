require(devtools)
library(tidyverse)
install_version("dplyr", version = "1.0.3", repos = "https://cran.us.r-project.org")
BiocManager::install("Rtools")
install_version("dplyr", version = "1.0.3", repos = "https://cran.us.r-project.org")
sessionInfo()
detatch(“package:ggplot2”, unload = TRUE)
detatch("package:ggplot2", unload = TRUE)
detach("package:ggplot2", unload = TRUE)
detach("package:dplyr", unload = TRUE)
detach("package:vegan", unload=TRUE)
detach("package:broom", unload=TRUE)
library(abind)
detach("package:abind", unload = TRUE)
detach("package:devtools", unload = TRUE)
require(devtools)
install_version("dplyr", version = "1.0.3", repos = "https://cran.us.r-project.org")
detach("package:devtools", unload = TRUE)
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
library(dplyr)
library(tidyverse)
installed.packages()
detach("package:dplyr", unload = TRUE)
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(ggplot2)
sessionInfo()
BiocManager::install("dplyr")
warnings()
require(dplyr)
require(ggplot2)
# ========================================================================================
#
# ========================================================================================
ggplot2::theme_set(theme_bw(24))
setwd("~/GitHub/dietary_patterns")
# Name your main directory for future use.
main.wd <- file.path(getwd())
# Import source code to run the analyses to follow.
source("lib/load_and_check.R")
source("lib/percent_kcal.R")
# Load example totals data ===============================================================
# Specify the directory where the data is.
SpecifyDataDirectory(directory.name = "eg_data/dietstudy/")
# Load the totals.csv
totals <- read.table("Totals_to_use.txt",  sep = "\t", header = T)
# Come back to the main directory
setwd(main.wd)
# Subset nutrition data.
# The columns "PROT" and "B12_ADD" and all columns in between will be selected.
#   Edit the start_col and/or end_col if different from the default.
SubsetNutrients(data = totals, start_col = "PROT", end_col = "B12_ADD")
SubsetNutrients <- function(data = totals, start_col = "PROT", end_col = "B12_ADD"){
# Column Variables of "totals" dataframe.
colvars <- names(totals)
# Get the first ID
start_col <- match(start_col, colvars)
# Get the second ID
end_col <- match(end_col, colvars)
# Subset range
nutrients <<- totals[, start_col:end_col]
# Print what was loaded.
cat("nutrients dataset contains the following", length(colnames(nutrients)), "columns.", "\n")
print(colnames(nutrients))
}
# Subset nutrition data.
# The columns "PROT" and "B12_ADD" and all columns in between will be selected.
#   Edit the start_col and/or end_col if different from the default.
SubsetNutrients(data = totals, start_col = "PROT", end_col = "B12_ADD")
# Perform PCA with all the nutrients, scaled.
scaledpca <- prcomp(nutrients, scale = T)
# Perform PCA with all the nutrients, scaled.
scaled_pca <- prcomp(nutrients, scale = T)
# SD.
var_explained_df <- data.frame(PC = paste0("PC",1:5),
var_explained = (scaled_pca$sdev)^2/sum((scaled_pca$sdev)^2))
# SD.
var_explained_df <- data.frame(PC = paste0("PC",1:length(colnames(nutrients))),
var_explained = (scaled_pca$sdev)^2/sum((scaled_pca$sdev)^2))
head(var_explained_df, 20)
View(scaled_pca)
summary(scaled_pca)
# Create a scree plot.
qplot(c(1:4), var_explained_df) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
# Create a scree plot.
qplot(c(1:10), var_explained_df[, 10]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
# Create a scree plot.
qplot(c(1:10), var_explained_df[10, ]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
head(var_explained_df, 20)
# Create a scree plot.
qplot(c(1:10), var_explained_df[1:10, 2]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
# ========================================================================================
#
# ========================================================================================
ggplot2::theme_set(theme_bw(14))
# Create a scree plot.
qplot(c(1:10), var_explained_df[1:10, 2]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
sum((scaled_pca$sdev)
)
