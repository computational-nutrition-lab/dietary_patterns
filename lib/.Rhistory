library("phyloseq"); packageVersion("phyloseq")
library("ggplot2"); packageVersion("ggplot2")
set.seed(711)
theme_set(theme_bw())
fontsize = 18L
theme_update(axis.title.x = element_text(size=fontsize))
theme_update(axis.title.y = element_text(size=fontsize))
theme_update(plot.title = element_text(size=fontsize+2))
# ---------------------------------------------------------------------------------------------------------------
# Borrow from the tutorial.
library("plyr"); packageVersion("plyr")
GP = GlobalPatterns
data("GlobalPatterns")
GP = GlobalPatterns
# Remove OTUs that do not show appear more than 5 times in more than half the samples
wh0 = genefilter_sample(GP, filterfun_sample(function(x) x > 5), A=0.5*nsamples(GP))
GP1 = prune_taxa(wh0, GP)
# Transform to even sampling depth.
GP1 = transform_sample_counts(GP1, function(x) 1E6 * x/sum(x))
# Keep only the most abundant five phyla.
phylum.sum = tapply(taxa_sums(GP1), tax_table(GP1)[, "Phylum"], sum, na.rm=TRUE)
top5phyla = names(sort(phylum.sum, TRUE))[1:5]
GP1 = prune_taxa((tax_table(GP1)[, "Phylum"] %in% top5phyla), GP1)
# Use ordinate function
GP.ord <- ordinate(GP1, method = "NMDS", distance = "bray")
# plot
p3 = plot_ordination(GP1, GP.ord, type="biplot", color="SampleType", shape="Phylum", title="biplot")
p3
# Test if the contents of the 'SampleType' variable are either "Feces", "Mock", "Skin", or "Tongue", and
#   make a vector saving TRUE or FALSE for all the contents.
human = get_variable(GP1, "SampleType") %in% c("Feces", "Mock", "Skin", "Tongue")
# Make human column in sample_data(GP1) as a factor.
sample_data(GP1)$human <- factor(human)
# ---------------------------------------------------------------------------------------------------------------
# MDS (“PCoA”) on Unifrac Distances. MDS=Multidimentional Scaling.   (I think this is what I want???)
# Use the ordinate function to simultaneously perform weightd UniFrac and then perform a
# Principal Coordinate Analysis on that distance matrix.
ordu = ordinate(GP1, method = "PCoA", distance = "unifrac", weighted=TRUE)
# Next pass that data and the ordination results to plot_ordination to create
# the ggplot2 output graphic with default ggplot2 settings.
p <- plot_ordination(GP1, ordu, color="SampleType", shape="human")
p
# Now make the graphic look nicer with a few additional ggplot2 layers.
p = p + geom_point(size=7, alpha=0.75)
p = p + scale_colour_brewer(type="qual", palette="Set1")
p <-  p + scale_colour_brewer(type="qual", palette="Set1")
# Now make the graphic look nicer with a few additional ggplot2 layers.
p <-  p + geom_point(size=7, alpha=0.75)
p <-  p + scale_colour_brewer(type="qual", palette="Set1")
p + ggtitle("MDS/PCoA on weighted-UniFrac distance, GlobalPatterns")
View(GP1)
